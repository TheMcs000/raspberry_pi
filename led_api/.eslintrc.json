{
    "env": {
        "browser": true,
        "es2021": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2020
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "rules": {
        "prefer-const": "warn",
        "no-empty": "warn",

        /* region === off because PHPStorm already checks for this. Would result in two errors (esLint + PHPStorm) === */
        "@typescript-eslint/no-unused-vars": [
            "off"
        ],
        "no-unused-vars": [
            "off"
        ],
        /* endregion --- off because PHPStorm already checks for this. Would result in two errors (esLint + PHPStorm) --- */

        "quotes": [
            "warn",
            "double"
        ],
        "semi": [
            "error",
            "always"
        ],
        "eol-last": [
            "error",
            "always"
        ],
        "no-multiple-empty-lines": [
            "warn",
            {
                // I dont like this rule (and it's not recommended by default)
                "max": 999,
                // Only one new line at end of file
                "maxEOF": 0
            }
        ],
        "@typescript-eslint/no-explicit-any": [
            // I know what im doing
            "off"
        ],
        "@typescript-eslint/ban-ts-comment": [
            // I know what im doing
            "off"
        ],
        "@typescript-eslint/no-this-alias": [
            // I know what im doing
            "off"
        ],
        "require-jsdoc": [
            "warn",
            {
                "require": {
                    "FunctionDeclaration": true,
                    "MethodDefinition": false,
                    "ClassDeclaration": true,
                    "ArrowFunctionExpression": false,
                    "FunctionExpression": false
                    // todo: also require for typescript cases (like enum, interface, ...)
                }
            }
        ]
    }
}
